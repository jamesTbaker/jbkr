custom:
  file: ${file(../config-common.yaml)}
  bundle:
    linting: false
  config:

# -------------------------------------------------------

    app: content
    service: starter
    memorySize: 256
    timeout: 5


functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: ${self:custom.file.endpoints.${self:app}.${self:service}}
          method: get
          cors: true

# -------------------------------------------------------

projectDir: ../
frameworkVersion: ${self:custom.file.custom.config.frameworkVersion}
org: ${self:custom.file.custom.config.org}
app: ${self:custom.file.custom.config.app}
service: ${self:custom.config.service}
provider:
  name: ${self:custom.file.provider.name}
  runtime: ${self:custom.file.provider.runtime}
  stage: ${self:custom.file.custom.config.stage}
  lambdaHashingVersion: '20201221'
  region: us-east-1
  profile: ${self:custom.file.provider.profile}
  memorySize: ${self:custom.config.memorySize}
  timeout: ${self:custom.config.timeout}
  deploymentBucket:
    name: jbkr-${self:provider.stage}-lambdas
  environment:
    NODE_PATH: "./:/opt/node_modules"
    stage: ${self:provider.stage}
    mongoDbHost: ${self:custom.file.mongoDbHost}
    mongoDbPass: ${self:custom.file.mongoDbPass}
    mongoDbUser: ${self:custom.file.mongoDbUser}
    mongoDbDbName: ${self:custom.file.mongoDbDbName}
    authJbkrSLSAdminAccessKeyID: ${self:custom.file.authJbkrSLSAdminAccessKeyID}
    authJbkrSLSAdminSecretAccessKey: ${self:custom.file.authJbkrSLSAdminSecretAccessKey}
package:
  individually: true
plugins:
  - serverless-bundle
