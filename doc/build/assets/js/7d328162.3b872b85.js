"use strict";(self.webpackChunk_jbkr_doc=self.webpackChunk_jbkr_doc||[]).push([[697],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,f=u["".concat(l,".").concat(m)]||u[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},d),{},{components:n})):r.createElement(f,i({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2548:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],s={id:"Lambdas-Intro",title:"Intro",sidebar_label:"Intro",sidebar_position:0},l=void 0,c={unversionedId:"Lambdas/Lambdas-Intro",id:"Lambdas/Lambdas-Intro",title:"Intro",description:"This is some great content.",source:"@site/docs/Lambdas/Intro.md",sourceDirName:"Lambdas",slug:"/Lambdas/Lambdas-Intro",permalink:"/jbkr/docs/Lambdas/Lambdas-Intro",editUrl:"https://github.com/jamesTbaker/jbkr/docs/Lambdas/Intro.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"Lambdas-Intro",title:"Intro",sidebar_label:"Intro",sidebar_position:0},sidebar:"Lambdas"},d={},p=[{value:"About the Lambda functions",id:"about-the-lambda-functions",level:2}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This is ",(0,o.kt)("inlineCode",{parentName:"p"},"some great content"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"const hereknae = 'asdf';\n")),(0,o.kt)("h2",{id:"about-the-lambda-functions"},"About the Lambda functions"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"AWS Lambda does not support ESM syntax, even on the Node.js 14.x runtime."),(0,o.kt)("li",{parentName:"ol"},"The Unified markdown transformation ecosystem plugins can only be used in\nESM syntax. Requiring, as opposed to importing, isn't possible."),(0,o.kt)("li",{parentName:"ol"},"I'm using ",(0,o.kt)("inlineCode",{parentName:"li"},"serverless-bundle")," to package the Lambda functions and transpile\nthem from ESM to CJS. However, this makes debugging the actual deployment",(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"artifact very painful.\n")),"--"),(0,o.kt)("li",{parentName:"ol"},"A lot of the Lambda code is repetitive, violating the principle of keeping\nit DRY. I created a function that contained this repetitive code and it\nperformed beautifully in the VS Code debugger. However, the transpiled\ndeployment artifact didn't work on AWS and the only info I could get was a\n",(0,o.kt)("inlineCode",{parentName:"li"},"502 Bad Gateway")," response with a payload of\n",(0,o.kt)("inlineCode",{parentName:"li"},'{ "message": "Internal server error" }'),"."),(0,o.kt)("li",{parentName:"ol"},"Faced with the choice of writing repetitive ESM code, days of painful debugging\nof the transpiled deployment artifacts, or reverting to an older, less\nsupported and reliable markdown transformation plugin ecosystem that would\nbe CJS-friendly, I opted to write repetitive ESM code.")))}m.isMDXComponent=!0}}]);