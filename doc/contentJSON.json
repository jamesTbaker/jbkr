[
	{
		"id": "module:@jbkr/http-client",
		"longname": "module:@jbkr/http-client",
		"name": "@jbkr/http-client",
		"kind": "module",
		"description": "Client for HTTP requests. Mostly a wrapper around the\n[Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API),\nplus a convenience method for use with Next.js or other React frontend.",
		"meta": {
			"lineno": 1,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/http-client"
		},
		"order": 0,
		"relativeCodePath": "modules/http-client/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js",
		"relativeCodePathWithLineNumber": "modules/http-client/index.js#L1",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js#L1"
	},
	{
		"id": "module:@jbkr/http-client.returnJSONFromEndPoint",
		"longname": "module:@jbkr/http-client.returnJSONFromEndPoint",
		"name": "returnJSONFromEndPoint",
		"kind": "constant",
		"scope": "static",
		"description": "Get JSON from an API.",
		"memberof": "module:@jbkr/http-client",
		"params": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "Destructured parameters",
				"name": "\\{\\}"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "The API endpoint URI string.",
				"name": "\\{\\}.endpoint"
			},
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "The options to use with\n[`fetch`](https://developer.mozilla.org/en-US/docs/Web/API/Fetch)",
				"name": "\\{\\}.fetchOptions"
			}
		],
		"returns": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "- The JSON representation of the data sent from the API,\nor an object with an `error` property."
			}
		],
		"meta": {
			"lineno": 48,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/http-client"
		},
		"order": 2,
		"relativeCodePath": "modules/http-client/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js",
		"relativeCodePathWithLineNumber": "modules/http-client/index.js#L48",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js#L48"
	},
	{
		"id": "module:@jbkr/http-client.returnContentAsProps",
		"longname": "module:@jbkr/http-client.returnContentAsProps",
		"name": "returnContentAsProps",
		"kind": "constant",
		"scope": "static",
		"description": "A convenience function that makes it easy for the Next.js user\nto send content from an API endpoint to a React component as `props`.",
		"memberof": "module:@jbkr/http-client",
		"params": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "Destructured parameters",
				"name": "\\{\\}"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "Token indicating what \"category\" of\ncontent is desired.",
				"name": "\\{\\}.contentToken"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "Token indicating which article is desired.\nIgnored if `contentToken` is not set to `liblab`.",
				"name": "\\{\\}.slug"
			}
		],
		"returns": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "- An object with the content assigned to\nthe `props` property."
			}
		],
		"meta": {
			"lineno": 82,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/http-client"
		},
		"order": 3,
		"relativeCodePath": "modules/http-client/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js",
		"relativeCodePathWithLineNumber": "modules/http-client/index.js#L82",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js#L82"
	},
	{
		"id": "module:@jbkr/http-client~returnContentEndpoint",
		"longname": "module:@jbkr/http-client~returnContentEndpoint",
		"name": "returnContentEndpoint",
		"kind": "function",
		"scope": "inner",
		"description": "Get a URL for a content API endpoint from just a couple of\ntokens.\n\nSaves me from having to remember and maintain (semi-)complex URLs.\nVery simplistic right now, but it's here in anticipation of future growth.",
		"memberof": "module:@jbkr/http-client",
		"params": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "Destructured parameters",
				"name": "\\{\\}"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "Token indicating what \"category\" of\ncontent is desired.",
				"name": "\\{\\}.endpointToken"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "Token indicating which article is desired.\nIgnored if `endpointToken` is not set to `liblab`.",
				"name": "\\{\\}.slug"
			}
		],
		"returns": [
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "- The API endpoint from which to request content."
			}
		],
		"meta": {
			"lineno": 23,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/http-client"
		},
		"order": 1,
		"relativeCodePath": "modules/http-client/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js",
		"relativeCodePathWithLineNumber": "modules/http-client/index.js#L23",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/http-client/index.js#L23"
	},
	{
		"id": "module:@jbkr/lambda-utilities",
		"longname": "module:@jbkr/lambda-utilities",
		"name": "@jbkr/lambda-utilities",
		"kind": "module",
		"description": "Various ancillary functions particular to running operations on AWS Lambda.",
		"meta": {
			"lineno": 1,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/lambda-utilities"
		},
		"order": 0,
		"relativeCodePath": "modules/lambda-utilities/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js",
		"relativeCodePathWithLineNumber": "modules/lambda-utilities/index.js#L1",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js#L1"
	},
	{
		"id": "module:@jbkr/lambda-utilities.returnRequesterCanAccess",
		"longname": "module:@jbkr/lambda-utilities.returnRequesterCanAccess",
		"name": "returnRequesterCanAccess",
		"kind": "constant",
		"scope": "static",
		"description": "Examine the AWS event to determine whether or not the\nrequester has permission to access the\nrequested process. We assume cron jobs are safe. For HTTP requests, we'll\ncheck that a particular string was sent (encrypted in transit, of course).\nThis is obviously not great authorization, of course. The best solution would\nbe to protect the entire system at the infrastructure level and not be able\nto make a request without authorization, but I'm not going to pay a vendor\nto do that for this personal project. What we've done here is better than\n*no* protection at all.",
		"memberof": "module:@jbkr/lambda-utilities",
		"params": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "Destructured parameters",
				"name": "\\{\\}"
			},
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "The [AWS event]{@link\nhttps://docs.aws.amazon.com/whitepapers/latest/serverless-architectures-lambda/the-event-object.html}.",
				"name": "\\{\\}.event"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "For cron jobs, AWS may have set this\nto `aws.events`. If calling a lambda request handler locally (e.g., for\ndebugging), call said handler with custom event object and set this property\nto `local`.",
				"name": "\\{\\}.event.source"
			},
			{
				"type": {
					"names": [
						"String"
					]
				},
				"description": "For cron jobs, AWS may\nhave set this to `aws:s3`.",
				"name": "\\{\\}.event.Records[0].eventSource"
			},
			{
				"type": {
					"names": [
						"Object",
						"String"
					]
				},
				"description": "The HTTP headers,\none of which may be an Authorization header carrying a Bearer token.",
				"name": "\\{\\}.event.headers"
			}
		],
		"returns": [
			{
				"type": {
					"names": [
						"boolean"
					]
				}
			}
		],
		"meta": {
			"lineno": 35,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/lambda-utilities"
		},
		"order": 1,
		"relativeCodePath": "modules/lambda-utilities/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js",
		"relativeCodePathWithLineNumber": "modules/lambda-utilities/index.js#L35",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js#L35"
	},
	{
		"id": "module:@jbkr/lambda-utilities.log",
		"longname": "module:@jbkr/lambda-utilities.log",
		"name": "log",
		"kind": "constant",
		"scope": "static",
		"description": "Log the incoming object with a visual identifier and a more\nconvenient timestamp. Each object property will be logged separately, both\nkey and value.",
		"memberof": "module:@jbkr/lambda-utilities",
		"params": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "Destructured parameters",
				"name": "\\{\\}"
			},
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "The object to be logged.",
				"name": "\\{\\}.incomingObject"
			}
		],
		"examples": [
			"import { log } from '@jbkr/lambda-utilities';\n\nlog({ 'incomingObject': { 'message': 'This is the message.' } });\n// ----- September 20, 2021, 3:25 PM EDT -- message -- This is the message."
		],
		"meta": {
			"lineno": 128,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/lambda-utilities"
		},
		"order": 2,
		"relativeCodePath": "modules/lambda-utilities/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js",
		"relativeCodePathWithLineNumber": "modules/lambda-utilities/index.js#L128",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js#L128"
	},
	{
		"id": "module:@jbkr/lambda-utilities.createResponse",
		"longname": "module:@jbkr/lambda-utilities.createResponse",
		"name": "createResponse",
		"kind": "constant",
		"scope": "static",
		"description": "Construct, log, and return an AWS Lambda / API Gateway response\nfrom some static values and the parameters we receive.",
		"memberof": "module:@jbkr/lambda-utilities",
		"params": [
			{
				"type": {
					"names": [
						"Object"
					]
				},
				"description": "Destructured parameters",
				"name": "\\{\\}"
			},
			{
				"type": {
					"names": [
						"Number"
					]
				},
				"description": "The HTTP status code.",
				"name": "\\{\\}.statusCode"
			},
			{
				"type": {
					"names": [
						"Number"
					]
				},
				"description": "Whatever data you want to send back. Functions\nmay set this to an error, if one occurs. The requester is responsible for\nverifying that payload contains what they expect.",
				"name": "\\{\\}.payload"
			},
			{
				"type": {
					"names": [
						"Number"
					]
				},
				"description": "The [AWS event]{@link\nhttps://docs.aws.amazon.com/whitepapers/latest/serverless-architectures-lambda/the-event-object.html}.",
				"name": "\\{\\}.event"
			},
			{
				"type": {
					"names": [
						"Number"
					]
				},
				"description": "The [AWS context]{@link\nhttps://docs.aws.amazon.com/whitepapers/latest/serverless-architectures-lambda/the-context-object.html}.",
				"name": "\\{\\}.context"
			}
		],
		"returns": [
			{
				"type": {
					"names": [
						"Object"
					]
				}
			}
		],
		"meta": {
			"lineno": 157,
			"filename": "index.js",
			"path": "/Users/skipbaker/Tresors/Software/jbkr/modules/lambda-utilities"
		},
		"order": 3,
		"relativeCodePath": "modules/lambda-utilities/index.js",
		"absoluteCodePath": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js",
		"relativeCodePathWithLineNumber": "modules/lambda-utilities/index.js#L157",
		"absoluteCodePathWithLineNumber": "https://github.com/jamesTbaker/jbkr/blob/main/modules/lambda-utilities/index.js#L157"
	}
]
